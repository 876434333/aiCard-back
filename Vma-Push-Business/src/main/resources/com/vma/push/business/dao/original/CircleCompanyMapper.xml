<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vma.push.business.dao.CircleCompanyMapper" >
  <resultMap id="BaseResultMap" type="com.vma.push.business.entity.CircleCompany" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="enterprise_id" property="enterpriseId" jdbcType="VARCHAR" />
    <result column="employee_id" property="employeeId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="zan_num" property="zanNum" jdbcType="INTEGER" />
    <result column="ping_num" property="pingNum" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, enterprise_id, employee_id, create_time, zan_num, ping_num, content, modify_time, 
    flag, type, title, cover
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from circle_company
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from circle_company
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.vma.push.business.entity.CircleCompany" >
    insert into circle_company (id, enterprise_id, employee_id, 
      create_time, zan_num, ping_num, 
      content, modify_time, flag, 
      type, title, cover)
    values (#{id,jdbcType=VARCHAR}, #{enterpriseId,jdbcType=VARCHAR}, #{employeeId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{zanNum,jdbcType=INTEGER}, #{pingNum,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.vma.push.business.entity.CircleCompany" >
    insert into circle_company
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="enterpriseId != null" >
        enterprise_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="zanNum != null" >
        zan_num,
      </if>
      <if test="pingNum != null" >
        ping_num,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="cover != null" >
        cover,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseId != null" >
        #{enterpriseId,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="zanNum != null" >
        #{zanNum,jdbcType=INTEGER},
      </if>
      <if test="pingNum != null" >
        #{pingNum,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vma.push.business.entity.CircleCompany" >
    update circle_company
    <set >
      <if test="enterpriseId != null" >
        enterprise_id = #{enterpriseId,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="zanNum != null" >
        zan_num = #{zanNum,jdbcType=INTEGER},
      </if>
      <if test="pingNum != null" >
        ping_num = #{pingNum,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vma.push.business.entity.CircleCompany" >
    update circle_company
    set enterprise_id = #{enterpriseId,jdbcType=VARCHAR},
      employee_id = #{employeeId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      zan_num = #{zanNum,jdbcType=INTEGER},
      ping_num = #{pingNum,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>